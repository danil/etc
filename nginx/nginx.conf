# Drop privileges, root is needed on most systems for binding to port 80
# (or anything < 1024).  Capability-based security may be available for
# your system and worth checking out so you won't need to be root to
# start nginx to bind on 80.
# user nobody nogroup; # for systems with a "nogroup"
user nobody nobody; # for systems with "nobody" as a group instead

# You generally only need one nginx worker unless you're serving
# large amounts of static files which require blocking disk reads.
# Number of worker processes equals the number of accessible processor cores.
# <https://www.linode.com/docs/web-servers/nginx/enable-tls-on-nginx-for-https-connections>.
worker_processes 1;

# Feel free to change all paths to suite your needs here, of course
# pid /tmp/nginx.pid;
error_log /var/log/nginx/error_log info;

events {
    worker_connections 1024; # increase if you have lots of clients

    # If accept_mutex is enabled, worker processes will accept new
    # connections by turn. Otherwise, all worker processes will be
    # notified about new connections, and if volume of new
    # connections is low, some of the worker processes may just
    # waste system resources.
    # <http://nginx.org/en/docs/ngx_core_module.html#accept_mutex>.
    accept_mutex off; # "on" if nginx worker_processes > 1

    use epoll; # enable for Linux 2.6+
    # use kqueue; # enable for FreeBSD, OSX
}

http {
    # Nginx will find this file in the config directory set at nginx build time
    include mime.types;

    # Fallback in case we can't determine a type.
    default_type application/octet-stream;

    # Click tracking.
    access_log /var/log/nginx/access_log combined;
    log_format main '$remote_addr - $remote_user [$time_local] '
                    '"$request" $status $bytes_sent '
                    '"$http_referer" "$http_user_agent" '
                    '"$gzip_ratio"';

    # You generally want to serve static files with nginx since neither
    # application nor backend server.
    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout 75 20;

    # It's easier to configure it all in one place here for static
    # files and also to disable gzip for clients who don't get
    # gzip/deflate right.  There are other other gzip settings that
    # may be needed used to deal with bad clients out there,
    # see http://wiki.nginx.org/NginxHttpGzipModule
    gzip on;
    gzip_http_version 1.0;
    gzip_proxied any;
    # gzip_min_length 500;
    gzip_min_length 1100;

    # Make sure gzip does not lose large gzipped js or css files
    # see <http://blog.leetsoft.com/2007/7/25/nginx-gzip-ssl>.
    # gzip_buffers 4 8k;
    gzip_buffers 16 8k;

    gzip_types text/plain text/xml text/css
               text/comma-separated-values
               text/javascript application/javascript application/x-javascript
               application/xml application/xml+rss
               application/atom+xml;

    # Disable gzip for certain browsers.
    # Netscape 4.x has some problems...
    # Netscape 4.06-4.08 have some more problems.
    # MSIE masquerades as Netscape, but it is fine
    gzip_disable "MSIE [1-6]\." "^Mozilla/4" "^Mozilla/4\.0[678]";

    client_header_timeout 10m;
    client_body_timeout   10m;
    send_timeout          10m;

    tcp_nopush  on; # off may be better for *some* Comet/long-poll stuff
    tcp_nodelay off; # on may be better for some Comet/long-poll stuff

    connection_pool_size        256;
    client_header_buffer_size   1k;
    large_client_header_buffers 4 2k;
    request_pool_size           4k;

    output_buffers  1 32k;
    postpone_output 1460;

    ignore_invalid_headers on;

    index index.html;

    # <https://www.linode.com/docs/web-servers/nginx/enable-tls-on-nginx-for-https-connections>,
    # <https://www.linode.com/docs/security/ssl/ssl-certificates-with-nginx#optimizing-nginx-for-ssl>.
    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 10m;

    # Fixes warning could not build optimal types_hash
    # <https://stackoverflow.com/questions/46031491/nginx-on-fedora-26-could-not-build-optimal-types-hash-error-message#47662953>.
    types_hash_max_size 4096;
    types_hash_bucket_size 64;

    # server {
    #   listen 127.0.0.1;
    #   server_name localhost;

    #   access_log /var/log/nginx/localhost.access_log main;
    #   error_log /var/log/nginx/localhost.error_log info;

    #   root /var/www/localhost/htdocs;
    # }

    # SSL example
    #server {
    #   listen 127.0.0.1:443;
    #   server_name localhost;

    #   ssl on;
    #   ssl_certificate /etc/ssl/nginx/nginx.pem;
    #   ssl_certificate_key /etc/ssl/nginx/nginx.key;

    #   access_log /var/log/nginx/localhost.ssl_access_log main;
    #   error_log /var/log/nginx/localhost.ssl_error_log info;

    #   root /var/www/localhost/htdocs;
    #}

    charset utf-8;
    include sites-enable/*;
}
