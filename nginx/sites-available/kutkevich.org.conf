# kutkevich.org.
server {
  # enable one of the following if you're on Linux or FreeBSD
  # listen 80 default deferred; # for Linux
  # listen 80 default accept_filter=httpready; # for FreeBSD
  listen 80;
  server_name kutkevich.org;
  access_log /var/log/nginx/kutkevich_org.access_log;
  error_log /var/log/nginx/kutkevich_org.error_log info;
  # <http://serverfault.com/questions/67316/in-nginx-how-can-i-rewrite-all-http-requests-to-https-while-maintaining-sub-dom#337893>
  return 301 http://danil.kutkevich.org$request_uri;
}

# # kutkevich.org:443.
# server {
#   # Danil.
#   # <https://www.linode.com/docs/security/ssl/how-to-provide-encrypted-access-to-resources-using-ssl-certificated-on-nginx/#using-ssl-with-versions-of-nginx-after-0714>.
#   listen 443 ssl;
#   server_name kutkevich.org;

#   access_log /var/log/nginx/kutkevich_org.ssl_access_log;
#   error_log /var/log/nginx/kutkevich_org.ssl_error_log info;

#   ssl_certificate /etc/ssl/nginx/STAR_kutkevich_org.pem;
#   ssl_certificate_key /etc/ssl/nginx/STAR_kutkevich_org.key;

#   # <http://serverfault.com/questions/67316/in-nginx-how-can-i-rewrite-all-http-requests-to-https-while-maintaining-sub-dom#337893>
#   return 301 https://danil.kutkevich.org$request_uri;
# }
